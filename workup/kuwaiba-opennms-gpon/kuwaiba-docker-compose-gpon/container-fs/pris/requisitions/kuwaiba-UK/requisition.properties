### File: myGroovySource/requisition.properties
# This example creates a requisition node from a Groovy script
source = script
source.file = ../kuwaiba.groovy

## this is a location adjacent to location of pris. i.e. inside the pris container
source.outputCsvRequisitonFileLocation =/tmp/pris
source.requisitionInstance=kuwaiba-UK

# kuwaiba URL and credentials
source.kuwaiba.URL = http://kuwaiba:8080/kuwaiba
source.kuwaiba.Username=admin
source.kuwaiba.Password=kuwaiba

# connection timeout in seconds
source.connectionTimeout=60

# name of the report to run in Kuwaiba
source.kuwaiba.ReportName=OpenNMSInventoryExport

# Kuwaiba Report Parameters
# A report can have a number of parameters. Each key is the XXX string after source.kuwaiba.parameters.XXX.
# Each value is the given value.

# useNodeLabelAsForeignId
# If blank or false, report uses the kuwaiba object id of the device as the node foreignId in the requisition (default)
# If true the report uses the generated object label as node foreignId in the requisition.
source.kuwaiba.parameters.useNodeLabelAsForeignId=false

# useAbsoluteNames 
# If true sets the report to use only the name of device in the model
# If blank or false sets the report to use the hierarchy of site,rack,device as the device name (default)
source.kuwaiba.parameters.useAbsoluteNames=false

# useAllPortAddresses
# If blank or false, the report only uses ports designated as isManagement. (default)
# If true it uses all port addresses assigned to a device and designates the interface snmp-primary P (primary snmp) if isManagment is true
# or N (Not managed) if isManagment false
source.kuwaiba.parameters.useAllPortAddresses=false

# subnetNetSubstitutionFilter
# substitutes the network portion of the inputIpv4Address for the network portion of the substitute address
# For example:
#                                   <within subnet>=<substitute subnet>
#  String subnetNetSubstitutionStr = "172.16.0.0/22=192.168.0.0/24";
#  String inputIpv4AddressStr = "172.16.105.20";
#  String substituteAddressStr= "192.168.105.20
source.kuwaiba.parameters.subnetNetSubstitutionFilter=10.0.0.0/8=192.168.105.0/24

# defaultAssetCategory
# AssetCategory is populated from device EquipmentModel displayName
# if the displayName is not set then the AssetCategory is set to the defaultAssetCategory or blank if the defaultAssetCategory is not set
# (this can be used in grafana to determine which display template to use)
source.kuwaiba.parameters.defaultAssetCategory=generic-1

# defaultAssetDisplayCategory
# AssetDisplayCategory is currently not populated from the model
# AssetDisplayCategory is set to the defaultAssetDisplayCategory or blank if the defaultAssetDisplauCategory is not set
# (this can be used in OpenNMS to determine which users can view an object)
source.kuwaiba.parameters.defaultAssetDisplayCategory=Customer1

# rangeParentValue
# rangeParentValue is used to find the parent visible object of the devices to include in the device list.
# If a device has this parent somewhere in their parent object tree, the device will be a candidate to be included in the requisition for OpenNMS.
# The rangeParentValue can be the name property of the object or the kuwaiba objectID of the object.
# If the rangeParentValue is not set or is empty, all devices will be included in the tree.
# If the rangeParentValue is not found, an exception will be thrown and the report will not complete.
source.kuwaiba.parameters.rangeParentValue=United Kingdom

# generatePassivePon
# If true, the exporter searches for OpticalLineTerminals and searches for trees of provisioned PON devices describing circuits from OLTs to ONT's
# Each device in the tree is provisioned with an upstream device so that alarm downstream and upstream correlation can be performed.        
source.kuwaiba.parameters.generatePassivePon=true

# defaultParentForeignSource
# Sets the default foreign source for the upstream object definitions (parent-foreign-source="" parent-foreign-id)
source.kuwaiba.parameters.defaultParentForeignSource=kuwaiba-UK

### default no-operation mapper
mapper = echo